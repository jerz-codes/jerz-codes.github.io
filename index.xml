<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>🏠 on jerz.codes</title>
    <link>https://jerz.codes/</link>
    <description>Recent content in 🏠 on jerz.codes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl-pl</language>
    <lastBuildDate>Tue, 06 Dec 2022 14:30:00 +0100</lastBuildDate><atom:link href="https://jerz.codes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Zajęcia 8: `class`, `data class`</title>
      <link>https://jerz.codes/posts/2022-12-06/</link>
      <pubDate>Tue, 06 Dec 2022 14:30:00 +0100</pubDate>
      
      <guid>https://jerz.codes/posts/2022-12-06/</guid>
      <description>Omówienie zadania: TBD Nowy materiał class data class Zadania ⏹ Rysowanie: Kwadrat 📒 Lista obecności, v2 ▶️ Rysowanie: Trójkąt ☠️ Omówienie zadania: TBD Nowy materiał class Kilka zajęć temu, gdy poznawaliśmy listy, pisaliśmy program, który operował na liście uczestników zapisanej w ten sposób:
val uczniowie = listOf&amp;lt;String&amp;gt;( &amp;#34;Adam&amp;#34;, &amp;#34;Ania&amp;#34;, &amp;#34;Bartłomiej&amp;#34;, &amp;#34;Julia&amp;#34;, &amp;#34;Jurek&amp;#34;, &amp;#34;Mieszko&amp;#34;, &amp;#34;Olgierd&amp;#34;, &amp;#34;Tytus&amp;#34;, ) Każdy uczeń reprezentowany był w programie przez obiekt String. Było to wystarczająco dobre rozwiązanie, gdy potrzebowaliśmy przechowywać tylko imię każdego z uczniów.</description>
    </item>
    
    <item>
      <title>Zajęcia 7: Lekcja powtórkowa</title>
      <link>https://jerz.codes/posts/2022-11-29/</link>
      <pubDate>Tue, 29 Nov 2022 14:00:00 +0200</pubDate>
      
      <guid>https://jerz.codes/posts/2022-11-29/</guid>
      <description>Powtórka? Teoria Praktyka 😈 Piekielny Prowadzący 🔎 Najdłuższe imię 📆 Rok Przestępny Bonus: kiedy wypada następny rok przestępny? ⭐️ ♊️ Zły Bliźniak ⭐️ 🖼 Lista w Ramce ⭐️ 🧮️ Tabliczka Mnożenia ⭐️ 🔤 Akronimy ⭐️ 🔁 Palindrom ⭐️ Bonus: palindromiczne zadania ☠️ 💎 Rysowanie Diamentu ☠️ ⏰ Sekundy na Czas ☠️ Powtórka? Mieliśmy przerabiać dzisiaj nowy materiał, ale po ostatnich zajęciach doszedłem do wniosku, że przyda się wam lekcja powtórkowa.</description>
    </item>
    
    <item>
      <title>Zajęcia 6: Wisielec</title>
      <link>https://jerz.codes/posts/2022-11-22/</link>
      <pubDate>Tue, 22 Nov 2022 18:00:00 +0200</pubDate>
      
      <guid>https://jerz.codes/posts/2022-11-22/</guid>
      <description>&amp;ldquo;Wisielec&amp;rdquo; Stan gry/model danych Dygresja nr 1: czy nasz model danych musi wyglądać w ten sposób? Pseudokod Puste funkcje Dygresja nr 2: po co nam te wszystkie funkcje? Integracja Operator !! Wypełnianie dziur narysujSzubienicę wypiszOdkryteLitery wczytajLiterę odkryjLiterę wynik Zadania do domu 😵 Dokończenie &amp;ldquo;Wisielca&amp;rdquo; 🔑 Podawanie hasła do &amp;ldquo;Wisielca&amp;rdquo; 🫥 Wielowyrazowe hasła w &amp;ldquo;Wisielcu&amp;rdquo; ⭐️ &amp;ldquo;Wisielec&amp;rdquo; Inną grą, którą możemy napisać dzięki listom, jest &amp;ldquo;Wisielec&amp;rdquo;.
Celem gry jest odgadnięcie hasła składającego się z jednego wyrazu.</description>
    </item>
    
    <item>
      <title>Zajęcia 5: `&#34;&#34;&#34; &#34;&#34;&#34;`, `List&lt;&gt;`, Kółko i Krzyżyk</title>
      <link>https://jerz.codes/posts/2022-11-15/</link>
      <pubDate>Tue, 15 Nov 2022 18:00:00 +0200</pubDate>
      
      <guid>https://jerz.codes/posts/2022-11-15/</guid>
      <description>Teksty wielolinijkowe Listy Podstawowe operacje na listach &amp;ldquo;Lista Obecności&amp;rdquo; List vs MutableList &amp;ldquo;Kółko i Krzyżyk&amp;rdquo; Stan gry, czyli model danych Pseudokod Puste funkcje Integracja Wypełnianie dziur Rysowanie planszy Wczytanie ruchu Wykonanie ruchu Sprawdzenie wyniku Podsumowanie Zadanie do domu #️⃣ Dokończenie &amp;ldquo;Kółka i Krzyżyk&amp;rdquo; Zadania dodatkowe 1️⃣ Lista Obecności – Wagarowicze 2️⃣ Odwrócona &amp;ldquo;Zgadula&amp;rdquo; ⭐️ 3️⃣ Kółko i Krzyżyk single player vs. noob ⭐️ Teksty wielolinijkowe Przypuszczam, że większość z was napisała zadany na ostatnich zajęciach program &amp;ldquo;Kostka do gry&amp;rdquo; mniej-więcej w ten sposób:</description>
    </item>
    
    <item>
      <title>Zajęcia 4: `when`, `for`, `IntRange`, `Char`, `var`, `package`, `import`, o rany ile tego jest 🙀</title>
      <link>https://jerz.codes/posts/2022-11-08/</link>
      <pubDate>Tue, 08 Nov 2022 18:00:00 +0200</pubDate>
      
      <guid>https://jerz.codes/posts/2022-11-08/</guid>
      <description>Smart casting when when z argumentem Zmienne Program &amp;ldquo;Zabawa w chowanego&amp;rdquo; Przedziały liczb Użycie pętli for z typem String Losowanie liczby Losowanie Boolean (rzut monetą) Pakiety i importy Zgadula Podsumowanie Programy do napisania w domu 1. Szczęśliwego Nowego Roku! 2. Kostka do gry 3. Megafon v2 4. Przeliterowywacz Ulepszenia &amp;ldquo;Zgaduli&amp;rdquo; 5. Gramy jeszcze raz? 6. Frustrat 7. Blisko/Daleko ⭐️ 8. Pilnowanie sensownego przedziału ⭐ Smart casting Wróćmy do przykładu &amp;ldquo;Przywitania&amp;rdquo; pytającego o wiek:</description>
    </item>
    
    <item>
      <title>Zajęcia 3: zmagania z kodowaniem; garść nowego materiału</title>
      <link>https://jerz.codes/posts/2022-10-25/</link>
      <pubDate>Tue, 25 Oct 2022 18:00:00 +0200</pubDate>
      
      <guid>https://jerz.codes/posts/2022-10-25/</guid>
      <description>Nasze zmagania z kodowaniem Nie wiem, jak dokładnie ma działać program? Nie wiem, od czego zacząć? Morze czerwieni Automatyczne formatowanie kodu Popatrzcie na linijkę przed podkreślonym kodem Czytanie kodu z góry na dół Pisanie najpierw &amp;ldquo;bloczku&amp;rdquo;, wypełnianie luk później Cofnięcie zmian do ostatniego działającego stanu Zaczynajcie od pustego pliku &amp;ldquo;Nuke the entire site from orbit – it&amp;rsquo;s the only way to be sure&amp;rdquo; Nowy materiał String.length Szablony tekstu, ciąg dalszy Inne operatory porównania Łańcuszki instrukcji warunkowych Operatory matematyczne Operatory logiczne Konwersja String -&amp;gt; Int Nullable types Pętla do { … } while (…) Podsumowanie Programy do napisania 1.</description>
    </item>
    
    <item>
      <title>Zajęcia 2: funkcje – ciąg dalszy; instrukcje warunkowe</title>
      <link>https://jerz.codes/posts/2022-10-18-funkcje-cd-i-instrukcje-warunkowe/</link>
      <pubDate>Tue, 18 Oct 2022 18:00:00 +0200</pubDate>
      
      <guid>https://jerz.codes/posts/2022-10-18-funkcje-cd-i-instrukcje-warunkowe/</guid>
      <description>Funkcje, c.d. Zakresy widoczności Typ Int Funkcje zwracające obiekt Instrukcja if Podsumowanie Funkcje, c.d. Poprzednie zajęcia skończyliśmy na pisaniu funkcji megafon:
fun main() = terminal { val ostrzeżenie = &amp;#34;uwaga, uwaga&amp;#34; megafon(ostrzeżenie) } fun megafon(tekst: String) { print(&amp;#34;📣 &amp;#34;) print(tekst.uppercase()) println(&amp;#34;!!!&amp;#34;) } Jest jeszcze kilka rzeczy, których możemy nauczyć się na tym przykładzie.
Zakresy widoczności Jeżeli spróbujemy wewnątrz funkcji megafon użyć stałej ostrzeżenie, nasz program nie uruchomi się, a IntelliJ podkreśli tę linijkę na czerwono:</description>
    </item>
    
    <item>
      <title>Zajęcia 1: gadka-szmatka; zapoznanie z IntelliJ; funkcje i stałe</title>
      <link>https://jerz.codes/posts/2022-10-11-funkcje-i-stale/</link>
      <pubDate>Tue, 11 Oct 2022 18:00:00 +0200</pubDate>
      
      <guid>https://jerz.codes/posts/2022-10-11-funkcje-i-stale/</guid>
      <description>Gadka-szmatka Zapoznanie z IntelliJ Jak otworzyć kod programu Jak uruchomić program Jak stworzyć plik na kolejny program Podstawy podstawowych podstaw programowania Funkcja main Drobna dygresja Echo Stałe Przywitanie Szablony tekstu Najnudniejsza funkcja świata Parametry funkcji Podsumowanie Gadka-szmatka Witam was serdecznie!
Zanim przejdziemy do faktycznego programowania, chciałbym udzielić wam kilku rad, żeby dobrze się nam wspólnie pracowało i żebyście wynieśli z tych zajęć jak najwięcej.
Po pierwsze, jeśli czegokolwiek nie będziecie rozumieć, natychmiast dajcie mi znać.</description>
    </item>
    
    <item>
      <title>Przygotowanie Do Pierwszych Zajęć</title>
      <link>https://jerz.codes/posts/przygotowanie-do-pierwszych-zajec/</link>
      <pubDate>Tue, 27 Sep 2022 02:00:00 +0200</pubDate>
      
      <guid>https://jerz.codes/posts/przygotowanie-do-pierwszych-zajec/</guid>
      <description>Na naszych wtorkowych zajęciach będziecie pracowali na własnym sprzęcie. Chciałbym, żeby wasze komputery były gotowe do pracy już przed zajęciami – możecie to zrobić w domu sami lub z pomocą rodziców albo starszego rodzeństwa.
Na wykonanie poniższych kroków będziecie potrzebować około jednej godziny (zależy to m.in. od prędkości waszego łącza internetowego).
Jeśli nie uda się wam wykonać wszystkich kroków – trudno, poradzimy sobie z tym wspólnie w najbliższy wtorek (przyjdźcie wtedy pół godziny wcześniej, o 15:30).</description>
    </item>
    
    <item>
      <title>Wstęp – wersja dla dorosłych</title>
      <link>https://jerz.codes/posts/wstep-rodzice/</link>
      <pubDate>Sun, 18 Sep 2022 13:00:00 +0200</pubDate>
      
      <guid>https://jerz.codes/posts/wstep-rodzice/</guid>
      <description>Ta wersja wpisu przeznaczona jest dla dorosłych – rodziców i opiekunów uczestników. Wersja dla młodzieży znajduje się tutaj.
Ogłoszenia dotyczące naszych zajęć były bardzo ogólnikowe. Celem tego wpisu jest udzielenie pełniejszych informacji na temat programu i formy zajęć oraz wymagań stawianych wobec uczestników.
Mam nadzieję, że pomoże wam to zdecydować, czy te zajęcia mogą zainteresować wasze dzieci oraz czy spełniają one wasze oczekiwania.
Program Na wstępie chciałbym zaznaczyć, że nie jest to kurs tworzenia gier komputerowych.</description>
    </item>
    
    <item>
      <title>Wstęp – wersja dla młodzieży</title>
      <link>https://jerz.codes/posts/wstep-mlodziez/</link>
      <pubDate>Sun, 18 Sep 2022 13:00:00 +0200</pubDate>
      
      <guid>https://jerz.codes/posts/wstep-mlodziez/</guid>
      <description>Ta wersja wpisu przeznaczona jest dla młodzieży – potencjalnych uczestników naszych zajęć. Wersja dla dorosłych znajduje się tutaj.
Jeżeli czytacie ten wpis, to w jakiś sposób dotarła do was informacja o organizowanych przez nas zajęciach. Przypuszczam, że chcielibyście wiedzieć więcej, zanim zdecydujecie się wziąć w nich udział.
Właśnie po to powstał ten wpis.
Co będziemy robić? Na naszej stronie startowej mamy takie zdanie.
Będziemy zajmować się nauką programowania w języku Kotlin od podstaw na przykładzie prostych gier komputerowych.</description>
    </item>
    
    <item>
      <title>Często Zadawane Pytania</title>
      <link>https://jerz.codes/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jerz.codes/faq/</guid>
      <description>Dlaczego Kotlin? Pierwszy powód jest dość prozaiczny: jest to język programowania, z którego korzystam na co dzień w pracy od kilku lat i znam go jak własną kieszeń.
Nie jest to oczywiście jedyny powód: w przeszłości programowałem zawodowo w Javie, C++ i kilku innych językach, i raczej żadnego z nich nie użyłbym w celach edukacyjnych.
Kotlin natomiast świetnie nadaje się do nauki programowania. Kolejne elementy składni języka można wprowadzać stopniowo, nie ma konieczności zagłębiania się od razu w jakieś bardzo skomplikowane koncepcje, albo przemilczania jakiegoś tematu.</description>
    </item>
    
    <item>
      <title>Informacje Kontaktowe</title>
      <link>https://jerz.codes/kontakt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jerz.codes/kontakt/</guid>
      <description>W razie jakichkolwiek pytań napisz do nas: jerz.codes@gmail.com
Spotkania dla uczestników zajęć odbywają się we wtorki w godzinach 16:00-17:30 w budynku Biblioteki Publicznej w Jerzmanowicach:</description>
    </item>
    
    <item>
      <title>Zapisy</title>
      <link>https://jerz.codes/zapisy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jerz.codes/zapisy/</guid>
      <description>Zapisy do grupy na rok szkolny 2022-2023 są zamknięte. Od osób, które chciałyby dołączyć w trakcie roku szkolnego, wymagane jest opanowanie całego przerobionego przez nas do tej pory materiału (jest więc to opcja jedynie dla wyjątkowo zdeterminowanych i ambitnych).
Pozostałe wymagania:
💻 sprzęt (własny laptop) ⏰ czas (spotkania we wtorki 16:00-17:30) 🎂 wiek (10-14 lat) Zainteresowanych uczestnictwem w przyszłych latach proszę o kontakt mailowy: jerz.codes@gmail.com.</description>
    </item>
    
  </channel>
</rss>
